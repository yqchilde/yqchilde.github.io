import{_ as h}from"./chunks/articleMetadata.CH2xeD7a.js";import{_ as r,C as o,c as d,o as e,j as l,G as c,at as k,a as g,w as m,b as u,e as b}from"./chunks/framework.CAzfEey9.js";import"./chunks/theme.CdwDD8CI.js";const y="/assets/1716720627.ZqPwWdmK.png",E="/assets/1716720628.C02aVt4E.png",F="/assets/1716720629.RdSEC7mr.png",C="/assets/1716720630.DFDwFLH7.png",w="/assets/1716720631.Dhavwy8L.png",_="/assets/1716720632.CsdzG7fp.png",v="/assets/1716816023.DoHVop-c.png",q="/assets/1716816024.CCdgreKE.png",f="/assets/1716816025.t5JGLPo6.png",B="/assets/1716816026.DAEdvGIY.png",z="/assets/1716816027.BbG7Fzv9.png",A="/assets/1716816028.DACGFSdv.png",D="/assets/terminal.CUivvkm1.ico",P="/assets/1716816029.DxtG0zD2.png",$=JSON.parse('{"title":"美化Windows Terminal","description":"给Windows的Terminal美化展示以及增加自动提示，oh-my-posh","frontmatter":{"title":"美化Windows Terminal","description":"给Windows的Terminal美化展示以及增加自动提示，oh-my-posh","date":"2024-05-26T18:56:27.000Z","tags":["Windows"]},"headers":[],"relativePath":"efficiency/windows/terminal.md","filePath":"posts/efficiency/windows/terminal/README.md","lastUpdated":1716874416000}'),x={name:"efficiency/windows/terminal.md"};function S(a,s,T,M,O,L){const t=h,p=o("ClientOnly");return e(),d("div",null,[s[0]||(s[0]=l("h1",{id:"美化windows-terminal并增加自动提示",tabindex:"-1"},[g("美化Windows Terminal并增加自动提示 "),l("a",{class:"header-anchor",href:"#美化windows-terminal并增加自动提示","aria-label":'Permalink to "美化Windows Terminal并增加自动提示"'},"​")],-1)),c(p,null,{default:m(()=>{var i,n;return[(((i=a.$frontmatter)==null?void 0:i.aside)??!0)&&(((n=a.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(e(),u(t,{key:0,article:a.$frontmatter},null,8,["article"])):b("",!0)]}),_:1}),s[1]||(s[1]=k('<p>如果是 Win11 自带了 Windows Terminal，如果是 Win10 先去 Mincrosoft Store 里下载，下载好了进行下列步骤</p><h2 id="_1-oh-my-posh" tabindex="-1">1. oh-my-posh <a class="header-anchor" href="#_1-oh-my-posh" aria-label="Permalink to &quot;1. oh-my-posh&quot;">​</a></h2><h3 id="安装oh-my-posh" tabindex="-1">安装Oh-My-Posh <a class="header-anchor" href="#安装oh-my-posh" aria-label="Permalink to &quot;安装Oh-My-Posh&quot;">​</a></h3><p>下载地址：<a href="https://github.com/JanDeDobbeleer/oh-my-posh/releases" target="_blank" rel="noreferrer">oh-my-posh/releases</a></p><p>如图： <img src="'+y+'" alt="img" loading="lazy"></p><p>安装，安装完成后，打开 Windows Terminal 输入命令<code>oh-my-posh</code>，检查是否安装ok</p><p>如图： <img src="'+E+`" alt="img" loading="lazy"></p><h3 id="配置oh-my-posh" tabindex="-1">配置Oh-My-Posh <a class="header-anchor" href="#配置oh-my-posh" aria-label="Permalink to &quot;配置Oh-My-Posh&quot;">​</a></h3><ol><li><p>终端执行命令<code>notepad $profile</code>，如果报错没有该文件，先执行命令创建 <code>New-Item -Path $PROFILE -Type File -Force</code>，如果PowerShell继续阻止运行本地脚本，执行命令设置权限 <code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope LocalMachine</code></p></li><li><p>安装模块</p></li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自动补全</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Install-Module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PSReadLine</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Force</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 让 Git 命令在 PowerShell 中具有更好的用户体验</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Install-Module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> posh-git</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ls时能给文件添加颜色</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Install-Module</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Terminal-Icons</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ol start="3"><li>在打开的<code>$profile</code>文件里添加如下配置，<code>iterm2.omp.json</code>是文件名，简单说就是指定主题路径</li></ol><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>oh-my-posh init pwsh --config &quot;$Env:POSH_THEMES_PATH\\iterm2.omp.json&quot; | Invoke-Expression</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Import-Module posh-git</span></span>
<span class="line"><span>Import-Module Terminal-Icons</span></span>
<span class="line"><span>Set-PSReadLineOption -PredictionSource History</span></span>
<span class="line"><span>Set-PSReadLineKeyHandler -Key Tab -Function MenuComplete</span></span>
<span class="line"><span>cls</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="配置终端字体" tabindex="-1">配置终端字体 <a class="header-anchor" href="#配置终端字体" aria-label="Permalink to &quot;配置终端字体&quot;">​</a></h3><p>保存<code>$profile</code>文件后重启终端，发现字体乱码</p><p>如图： <img src="`+F+'" alt="img" loading="lazy"></p><p>这里需要使用<code>Nerd字体</code>，下载地址 <a href="https://www.nerdfonts.com/font-downloads" target="_blank" rel="noreferrer">nerdfonts-downloads</a></p><p>找到<code>JetBrainsMono</code>字体，下载之后解压安装，打开终端的设置里配置字体，然后重启终端</p><p>如图： <img src="'+C+'" alt="img" loading="lazy"></p><p><img src="'+w+'" alt="img" loading="lazy"></p><p><img src="'+_+'" alt="img" loading="lazy"></p><h2 id="_2-oh-my-zsh" tabindex="-1">2. oh-my-zsh <a class="header-anchor" href="#_2-oh-my-zsh" aria-label="Permalink to &quot;2. oh-my-zsh&quot;">​</a></h2><p>由于常使用Mac &amp;&amp; Linux环境，对zsh比较熟悉，其中很多命令<code>PowerShell</code>并没有，比如<code>grep</code>, <code>ll</code>等等，所以这里使用<code>oh-my-zsh</code>，在Mac上我也使用<code>oh-my-zsh</code></p><p>使用的前提是要安装过<code>git bash</code>，这里就不阐述了</p><h3 id="安装zsh" tabindex="-1">安装Zsh <a class="header-anchor" href="#安装zsh" aria-label="Permalink to &quot;安装Zsh&quot;">​</a></h3><p>下载地址：<a href="https://packages.msys2.org/package/zsh?repo=msys&amp;variant=x86_64" target="_blank" rel="noreferrer">zsh-download</a></p><p>如图： <img src="'+v+'" alt="img" loading="lazy"></p><p>解压之后，将全部文件移入到git bash的目录下，然后重新进入 git bash，输入命令<code>zsh</code>，检查是否安装ok，如下图就是安装ok，按q退出，我们开始配置</p><p>如图： <img src="'+q+`" alt="img" loading="lazy"></p><h3 id="安装oh-my-zsh" tabindex="-1">安装Oh-My-Zsh <a class="header-anchor" href="#安装oh-my-zsh" aria-label="Permalink to &quot;安装Oh-My-Zsh&quot;">​</a></h3><p>执行如下命令：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 或者 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>如图： <img src="`+f+'" alt="img" loading="lazy"></p><h3 id="配置插件与主题" tabindex="-1">配置插件与主题 <a class="header-anchor" href="#配置插件与主题" aria-label="Permalink to &quot;配置插件与主题&quot;">​</a></h3><p><strong>自动补全插件</strong> <code>zsh-autosuggestions</code>，安装命令：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/zsh-users/zsh-autosuggestions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${ZSH_CUSTOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.oh-my-zsh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">custom}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/plugins/zsh-autosuggestions</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>语法高亮插件</strong> <code>zsh-syntax-highlighting</code>，安装命令：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/zsh-users/zsh-syntax-highlighting.git</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ${ZSH_CUSTOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">~</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.oh-my-zsh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">custom}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/plugins/zsh-syntax-highlighting</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>如图： <img src="'+B+'" alt="img" loading="lazy"></p><p><img src="'+z+`" alt="img" loading="lazy"></p><h3 id="配置zsh为bash的默认shell" tabindex="-1">配置Zsh为bash的默认shell <a class="header-anchor" href="#配置zsh为bash的默认shell" aria-label="Permalink to &quot;配置Zsh为bash的默认shell&quot;">​</a></h3><p>打开git bash的根目录，编辑文件<code>etc/bash.bashrc</code>，填入下面代码，然后重启就默认是 zsh 了</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Launch Zsh</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-t</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="配置windows-terminal使用git-bash" tabindex="-1">配置Windows Terminal使用git bash <a class="header-anchor" href="#配置windows-terminal使用git-bash" aria-label="Permalink to &quot;配置Windows Terminal使用git bash&quot;">​</a></h3><p>打开设置-打开JSON文件，在 <code>profiles.list</code> 下添加如下配置：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;guid&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;{1b478085-41fb-49da-a9c9-8adbc5b7c071}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;commandline&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%PROGRAMFILES%/git/usr/bin/bash.exe -i -l&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;icon&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%PROGRAMFILES%/Git/mingw64/share/git/git-for-windows.ico&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Bash&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;startingDirectory&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;%USERPROFILE%&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;closeOnExit&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;historySize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;snapOnInput&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;useAcrylic&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> : </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>如图： <img src="`+A+'" alt="img" loading="lazy"></p><h3 id="将windows-terminal加入到右键菜单" tabindex="-1">将Windows Terminal加入到右键菜单 <a class="header-anchor" href="#将windows-terminal加入到右键菜单" aria-label="Permalink to &quot;将Windows Terminal加入到右键菜单&quot;">​</a></h3><p>执行命令 <code>mkdir &quot;$USERPROFILE/AppData/Local/terminal&quot;</code> 创建目录</p><p>向其中放入文件 <code>wt.reg</code> 和 <code>terminal.ico</code> <img src="'+D+`" alt="wt.reg" style="display:inline-block;zoom:15%;vertical-align:middle;"></p><div class="language-txt vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Windows Registry Editor Version 5.00</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\wt]</span></span>
<span class="line"><span>@=&quot;Windows terminal here&quot;</span></span>
<span class="line"><span>&quot;Icon&quot;=&quot;%LOCALAPPDATA%\\\\terminal\\\\terminal.ico&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>[HKEY_CLASSES_ROOT\\Directory\\Background\\shell\\wt\\command]</span></span>
<span class="line"><span>@=&quot;C:\\\\Users\\\\&lt;your username&gt;\\\\AppData\\\\Local\\\\Microsoft\\\\WindowsApps\\\\wt.exe&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>最后一行 wt.exe 的路径，必须使用绝对路径，否则会报错，然后双击执行<code>wr.reg</code>，将配置添加到注册表。</p><p>效果如图： <img src="`+P+'" alt="img" loading="lazy"></p>',52))])}const G=r(x,[["render",S]]);export{$ as __pageData,G as default};
