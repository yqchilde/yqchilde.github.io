import{_ as p}from"./chunks/articleMetadata.blKJ6eD7.js";import{_ as r,h,u as o,B as c,l as n,x as d,ai as k,m as g,f as e,p as u,q as b}from"./chunks/framework.Cy-Cf61O.js";import"./chunks/theme.DZnwzHNL.js";const m="/assets/20200308183833.D6dYs8S5.png",E="/assets/20200308190854.BOxmwZrH.png",q=JSON.parse('{"title":"正确配置rocket-nginx，加速你的wordpress","description":"正确配置rocket-nginx，加速你的wordpress，前提是需要先获得`wp-rocket`插件，该插件是收费插件，如果有能力请支持正版，这里不提供下载地址，擅于利用搜索引擎或万能的某宝。本文是基于自己用宝塔配置rocket-nginx的教程，因为网上目前搜到的所有配置都是直接翻译github的README.md( 😒 )，不过还是推荐看最新的文档，没准啥时候就变动了，操作步骤如下","frontmatter":{"title":"正确配置rocket-nginx，加速你的wordpress","description":"正确配置rocket-nginx，加速你的wordpress，前提是需要先获得`wp-rocket`插件，该插件是收费插件，如果有能力请支持正版，这里不提供下载地址，擅于利用搜索引擎或万能的某宝。本文是基于自己用宝塔配置rocket-nginx的教程，因为网上目前搜到的所有配置都是直接翻译github的README.md( 😒 )，不过还是推荐看最新的文档，没准啥时候就变动了，操作步骤如下","date":"2020-03-08T11:15:56.000Z","tags":["Wordpress"]},"headers":[],"relativePath":"blog/2020/wordpress-rocket.md","filePath":"posts/blog/2020/wordpress-rocket/README.md","lastUpdated":1714128292000}'),x={name:"blog/2020/wordpress-rocket.md"},y=n("h1",{id:"正确配置rocket-nginx-加速你的wordpress",tabindex:"-1"},[d("正确配置rocket-nginx，加速你的wordpress "),n("a",{class:"header-anchor",href:"#正确配置rocket-nginx-加速你的wordpress","aria-label":'Permalink to "正确配置rocket-nginx，加速你的wordpress"'},"​")],-1),w=k(`<h2 id="_0x01-前提" tabindex="-1">0x01 前提 <a class="header-anchor" href="#_0x01-前提" aria-label="Permalink to &quot;0x01 前提&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">前提</p><p>前提是需要先获得<code>wp-rocket</code>插件，该插件是收费插件，如果有能力请支持正版，这里不提供下载地址，擅于利用搜索引擎或万能的某宝。本文是基于自己用宝塔配置rocket-nginx的教程，因为网上目前搜到的所有配置都是直接翻译github的README.md(😒 )，不过还是推荐看最新的文档，没准啥时候就变动了</p></div><h2 id="_0x02-正文" tabindex="-1">0x02 正文 <a class="header-anchor" href="#_0x02-正文" aria-label="Permalink to &quot;0x02 正文&quot;">​</a></h2><h3 id="rocket-nginx" tabindex="-1">rocket-nginx <a class="header-anchor" href="#rocket-nginx" aria-label="Permalink to &quot;rocket-nginx&quot;">​</a></h3><ul><li>介绍一下（翻译过来）：</li></ul><p>Rocket-Nginx是WordPress缓存插件WP-Rocket的Nginx配置。它使Nginx可以直接提供以前缓存的文件，而无需调用WordPress或任何PHP。它还会添加标题以缓存CSS，JS和媒体，以通过减少对Web服务器的请求来利用浏览器的缓存。</p><ul><li><p>简单说就是<strong>NGINX→PHP-FPM→PHP→静态文件</strong> 变成了 <strong>NGINX→静态文件</strong>（通过直接提供静态页面而不加载WordPress或PHP，可以使WP-Rocket更快。）</p></li><li><p>github地址：<a href="https://github.com/SatelliteWP/rocket-nginx" target="_blank" rel="noreferrer">rocket-nginx</a></p></li></ul><h3 id="禁止wp定时任务" tabindex="-1">禁止WP定时任务 <a class="header-anchor" href="#禁止wp定时任务" aria-label="Permalink to &quot;禁止WP定时任务&quot;">​</a></h3><p>在<code>wp-config</code>这个文件里添加一行代码，作用是为了禁止WP自带的CRON定时任务</p><p><code>define(&#39;DISABLE_WP_CRON&#39;, true);</code></p><h3 id="添加新的定时任务" tabindex="-1">添加新的定时任务 <a class="header-anchor" href="#添加新的定时任务" aria-label="Permalink to &quot;添加新的定时任务&quot;">​</a></h3><p>以下三种定时任务代码任一个就行，记得将website换成自己的网址</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/15 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> wget -q -O - http://www.website.com/wp-cron.php</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">doing_wp_cron &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/dev/null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">or</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/15 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> curl http://www.website.com/wp-cron.php</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">doing_wp_cron &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/dev/null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">or</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/15 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cd /home/user/public_html; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wp-cron.php</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/dev/null</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><ul><li><p>在SSH添加定时任务，先去了解<code>Crontab</code>知识，<a href="https://www.runoob.com/w3cnote/linux-crontab-tasks.html" target="_blank" rel="noreferrer">点这里查看</a></p></li><li><p>有宝塔面板的可以直接在宝塔中添加定时任务，那就简单了</p></li></ul><p><img src="`+m+`" alt="img" title="定时任务" loading="lazy"></p><h3 id="拉取rocket-nginx到nginx目录" tabindex="-1">拉取rocket-nginx到nginx目录 <a class="header-anchor" href="#拉取rocket-nginx到nginx目录" aria-label="Permalink to &quot;拉取rocket-nginx到nginx目录&quot;">​</a></h3><ul><li><p>在SSH里面进入到nginx的目录，以宝塔为例（/www/server/nginx）<code>cd /www/server/nginx</code></p></li><li><p>拉取代码 <code>git clone https://github.com/satellitewp/rocket-nginx.git</code></p></li><li><p>从2.0版开始，必须生成配置。要生成默认配置，必须重命名禁用的ini文件并运行配置解析器：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rocket-nginx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rocket-nginx.ini.disabled</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rocket-nginx.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rocket-parser.php</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li><p>运行之后就会在<code>rocket-nginx</code>目录生成一个<code>default.conf</code>文件，是根据<code>rocket-nginx.ini</code>对应解析的，所以可以看看相应配置</p></li></ul><h3 id="在nginx配置文档导入" tabindex="-1">在nginx配置文档导入 <a class="header-anchor" href="#在nginx配置文档导入" aria-label="Permalink to &quot;在nginx配置文档导入&quot;">​</a></h3><ul><li><p>在对应网站的<code>nginx</code>配置文档中<code>server</code>部分导入</p><div class="language-nginx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Rocket-Nginx configuration</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	include </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/www/server/nginx/rocket-nginx/default.conf;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div></li><li><p>配置完要先测试是否配置可行 <code>nginx -t</code></p></li><li><p>配置可行记得重启nginx <code>service nginx reload</code></p></li></ul><h3 id="测试是否生效" tabindex="-1">测试是否生效 <a class="header-anchor" href="#测试是否生效" aria-label="Permalink to &quot;测试是否生效&quot;">​</a></h3><ul><li><p>在<code>rocket-nginx.ini</code> 文件中将<code>debug</code>设置成true，这样就可以看到在请求的header里面有<code>X-Rocket-Nginx</code>开头的内容</p><div class="language-http vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Rocket-Nginx-Serving-Static：配置是否直接提供了缓存文件（是否绕过WordPress）：是或否</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Rocket-Nginx-Reason：注明了为什么启用的原因，如果启用成功返回路径，失败返回原因</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Rocket-Nginx-File：不管是否启用成功，这里展示一下代理的路径，方便拍错</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul><h2 id="_0x03-注意" tabindex="-1">0x03 注意 <a class="header-anchor" href="#_0x03-注意" aria-label="Permalink to &quot;0x03 注意&quot;">​</a></h2><ul><li><p>提示：每次更改了<code>rocket-nginx.ini</code>就要利用<code>php rocket-parser.php</code> 命令解析</p></li><li><p>记得关闭<code>wp-rocket</code>插件中的对移动端单独缓存功能，（除非你的主题开发了两端）我想现在的主题都是响应式的不存在这个问题</p></li><li><p>如果站点是<code>https</code>并且在header中显示如下内容，即结尾一直是<code>/index.html</code>，那就说明可能是你的nginx配置文件的问题，需要从自己的文档下手</p><div class="language-http vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Rocket-Nginx-Serving-Static：NO</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">X-Rocket-Nginx-File：... /index.html</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>正确的路径结尾应该是 <code>index-https.html_gzip</code>，这是<code>https</code>站点的情况</p></li></ul><h2 id="_0x04-效果" tabindex="-1">0x04 效果 <a class="header-anchor" href="#_0x04-效果" aria-label="Permalink to &quot;0x04 效果&quot;">​</a></h2><p>在没有做<code>nginx</code>优化时，即使用了<code>wp-rocket</code>插件也是两个B，现在明显有变化，因为本主题是图文式的，如果你的主题不怎么用图片，那么效果会更为显著。</p><p><img src="`+E+'" alt="img" title="速度测试" loading="lazy"></p>',26);function _(s,F,v,f,A,P){const t=p,l=g("ClientOnly");return e(),h("div",null,[y,o(l,null,{default:c(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(e(),u(t,{key:0,article:s.$frontmatter},null,8,["article"])):b("",!0)]}),_:1}),w])}const B=r(x,[["render",_]]);export{q as __pageData,B as default};
