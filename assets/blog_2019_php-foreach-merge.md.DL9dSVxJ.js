import{_ as h}from"./chunks/articleMetadata.CH2xeD7a.js";import{_ as r,C as k,c as d,o as e,j as t,G as E,at as o,a as c,w as g,b as y,e as u}from"./chunks/framework.CAzfEey9.js";import"./chunks/theme.CdwDD8CI.js";const v=JSON.parse('{"title":"php在foreach里面合并数组","description":"PHP如何在foreach中合并数组呢？","frontmatter":{"title":"php在foreach里面合并数组","description":"PHP如何在foreach中合并数组呢？","date":"2019-08-19T09:57:49.000Z","tags":["PHP"]},"headers":[],"relativePath":"blog/2019/php-foreach-merge.md","filePath":"posts/blog/2019/6-php-foreach-merge/README.md","lastUpdated":1762005690000}'),m={name:"blog/2019/php-foreach-merge.md"};function b(a,s,F,_,C,f){const l=h,p=k("ClientOnly");return e(),d("div",null,[s[0]||(s[0]=t("h1",{id:"php在foreach里面合并数组",tabindex:"-1"},[c("php在foreach里面合并数组 "),t("a",{class:"header-anchor",href:"#php在foreach里面合并数组","aria-label":'Permalink to "php在foreach里面合并数组"'},"​")],-1)),E(p,null,{default:g(()=>{var i,n;return[(((i=a.$frontmatter)==null?void 0:i.aside)??!0)&&(((n=a.$frontmatter)==null?void 0:n.showArticleMetadata)??!0)?(e(),y(l,{key:0,article:a.$frontmatter},null,8,["article"])):u("",!0)]}),_:1}),s[1]||(s[1]=o(`<h2 id="使用函数" tabindex="-1">使用函数 <a class="header-anchor" href="#使用函数" aria-label="Permalink to &quot;使用函数&quot;">​</a></h2><p><code>array_merge()</code> <code>call_user_func_array</code></p><p>如果直接两个数组合并，那十分简单，如下</p><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$a1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;red&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;green&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$a2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;blue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;yellow&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print_r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">array_merge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($a1,$a2));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 结果如下</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Array ( [0] =&gt; red [1] =&gt; green [2] =&gt; blue [3] =&gt; yellow )</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="合并相同的-内容-为数组" tabindex="-1">合并相同的 “内容” 为数组 <a class="header-anchor" href="#合并相同的-内容-为数组" aria-label="Permalink to &quot;合并相同的 “内容” 为数组&quot;">​</a></h2><div class="language-php vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">foreach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($array </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $k </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $v) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	$array[] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $db</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;classid = ?&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($v[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cid&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]))</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fetchAll</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> call_user_func_array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;array_merge&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, $array);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">print_r</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($result);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 这样就是有几条就连接起来了</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,6))])}const D=r(m,[["render",b]]);export{v as __pageData,D as default};
