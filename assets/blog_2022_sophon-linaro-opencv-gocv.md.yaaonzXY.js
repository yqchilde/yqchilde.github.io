import{_ as h}from"./chunks/articleMetadata.blKJ6eD7.js";import{_ as t,h as k,u as r,B as d,l as n,x as F,ai as c,m as o,f as l,p as g,q as C}from"./chunks/framework.Cy-Cf61O.js";import"./chunks/theme.DZnwzHNL.js";const I=JSON.parse('{"title":"在算能盒子 (BMNN) 上使用gocv","description":"本文记录了在算能盒子 (BMNN) 上使用gocv的过程，本文将描述使用期间走过的坑，以及如何解决这些坑。","frontmatter":{"title":"在算能盒子 (BMNN) 上使用gocv","description":"本文记录了在算能盒子 (BMNN) 上使用gocv的过程，本文将描述使用期间走过的坑，以及如何解决这些坑。","date":"2022-04-19T17:29:34.000Z","tags":["Golang"]},"headers":[],"relativePath":"blog/2022/sophon-linaro-opencv-gocv.md","filePath":"posts/blog/2022/sophon-linaro-opencv-gocv/README.md","lastUpdated":1714128292000}'),y={name:"blog/2022/sophon-linaro-opencv-gocv.md"},E=n("h1",{id:"在算能盒子-bmnn-上使用gocv",tabindex:"-1"},[F("在算能盒子 (BMNN) 上使用gocv "),n("a",{class:"header-anchor",href:"#在算能盒子-bmnn-上使用gocv","aria-label":'Permalink to "在算能盒子 (BMNN) 上使用gocv"'},"​")],-1),b=c(`<div class="tip custom-block"><p class="custom-block-title">背景</p><p>本文的背景是基于一台 <strong>AI微服务器SE5-8</strong> （以下简称AI盒子）上进行开发，SOPHON AI微服务器SE5-8是一款高性能、低功耗边缘计算产品，搭载算能自主研发的第三代TPU芯片BM1684，INT8算力高达10.6TOPS，可同时处理8路高清视频，支持8路全高清视频硬件解码与1路编码。</p><p>为什么要改gocv的包？因为算能盒子自带了opencv，但是版本和gocv里的对不上，并且有一些系统依赖根本不存在，也用不到，所以要自行改gocv的包。</p></div><h2 id="_0-编译报错" tabindex="-1">0. 编译报错 <a class="header-anchor" href="#_0-编译报错" aria-label="Permalink to &quot;0. 编译报错&quot;">​</a></h2><p>首先我们准备如下一段代码：</p><div class="language-go vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	_ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gocv.io/x/gocv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Hello, World!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>我们根据 <code>gocv.io</code> 的文档，先要确保安装了 <code>opencv</code>，在这台 AI盒子 上已经存在了一个 <code>opencv</code> 的编译包，其目录在 <code>/system/lib</code> 目录下。我们先进行一下 <code>go build</code>，结果如下：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># pkg-config --cflags  -- opencv4</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> opencv4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> was</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pkg-config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> search</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Perhaps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> should</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">opencv4.pc&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to the PKG_CONFIG_PATH environment variable</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">No package &#39;opencv4&#39; found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pkg-config: exit status 1</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_1-尝试使用自带的opencv" tabindex="-1">1. 尝试使用自带的opencv <a class="header-anchor" href="#_1-尝试使用自带的opencv" aria-label="Permalink to &quot;1. 尝试使用自带的opencv&quot;">​</a></h2><p>根据上文报错信息看，是因为我们没有按照 <code>gocv</code> 指定的依赖路径存放opencv编译包，所以我们需要指定一个路径，做如下处理：</p><ol><li>创建opencv4.pc文件</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /system/lib/pkgconfig/opencv4.pc</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="2"><li>在文件中添加如下内容：</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Package Information for pkg-config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/system</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">exec_prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${prefix}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">libdir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${exec_prefix}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/lib</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">includedir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${prefix}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/include/opencv/opencv4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OpenCV</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Description:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Computer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Vision</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Library</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Version:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4.1</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Libs:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">exec_prefix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}/lib</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_gapi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_stitching</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_alphamat</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_aruco</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_barcode</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_bgsegm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_bioinspired</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_ccalib</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_dnn_objdetect</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_dnn_superres</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_dpm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_face</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_freetype</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_fuzzy</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_hfs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_img_hash</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_intensity_transform</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_line_descriptor</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_mcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_quality</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_rapid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_reg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_rgbd</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_saliency</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_stereo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_structured_light</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_phase_unwrapping</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_superres</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_optflow</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_surface_matching</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_tracking</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_highgui</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_datasets</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_text</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_plot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_videostab</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_videoio</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_wechat_qrcode</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_xfeatures2d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_shape</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_ml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_ximgproc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_video</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_dnn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_xobjdetect</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_objdetect</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_calib3d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_imgcodecs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_features2d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_flann</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_xphoto</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_photo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_imgproc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_core</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Libs.private:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ldl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lpthread</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lrt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cflags:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">includedir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="3"><li>设置环境变量指定 <code>opencv4.pc</code> 的路径，不指定时默认找的是 <code>/usr/local/lib/pkgconfig/opencv4.pc</code></li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PKG_CONFIG_PATH=&quot;/system/lib/pkgconfig&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="4"><li>再次进行编译</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># gocv.io/x/gocv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">highgui.cpp:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> In</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> function</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ‘void</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Window_New</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> char</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">’:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">highgui.cpp:5:5:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ‘namedWindow’</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ‘cv’</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     cv::namedWindow(winname,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flags</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     ^~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">highgui.cpp:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> In</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> function</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ‘void</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Window_Close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> char</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">’:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">highgui.cpp:9:5:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ‘destroyWindow’</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ‘cv’</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     cv::destroyWindow(winname</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     ^~</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">highgui.cpp:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> In</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> function</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ‘void</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Window_IMShow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">const</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> char</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Mat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">’:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">highgui.cpp:13:5:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> error:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ‘imshow’</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> member</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ‘cv’</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     cv::imshow(winname,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">mat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">     ^~</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 省略很多错误</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>发现编译还是报了很多错误，出现这个原因是因为我所使用的这台 AI盒子 ，不支持显示即可视化，那么就意味着用不来了自带的优化好的 opencv 了，而且这里要说，自带的 opencv 是4.1的，如果要使用 <code>gocv</code> 最近的几个版本，其中很多方法，可能在编译好的opencv库里并没有，这就意味着我们要想办法自行编译 <code>opencv</code>。</p><h2 id="_2-自行编译opencv" tabindex="-1">2. 自行编译opencv <a class="header-anchor" href="#_2-自行编译opencv" aria-label="Permalink to &quot;2. 自行编译opencv&quot;">​</a></h2><ol><li>进入gocv mod中的文件夹</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $GOPATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/pkg/mod/gocv.io/x/gocv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v0.30.0/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> u+x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Makefile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>鉴于 AI盒子 性能考虑，可以<strong>不选用</strong>方式1，而是在官方提供的 <strong>docker镜像</strong> 内完成编译</li></ol><p>下载指定版本 <a href="https://github.com/opencv/opencv/archive/4.5.3.zip" target="_blank" rel="noreferrer">opencv</a> , <a href="https://github.com/opencv/opencv_contrib/archive/4.5.3.zip" target="_blank" rel="noreferrer">opencv_contrib</a> 源码解压，这俩放在同一目录，进入 <code>opencv-x.x.x/platforms/linux</code> 目录下修改文件 <code>aarch64-gnu.toolchain.cmake</code>，内容如下：</p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">CMAKE_SYSTEM_PROCESSOR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> aarch64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GCC_COMPILER_VERSION</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CACHE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STRING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;GCC Compiler version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">GNU_MACHINE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;aarch64-linux-gnu&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CACHE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> STRING</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;GNU compiler triple&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">CMAKE_C_COMPILER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/release/toolchains/gcc/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-gcc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> )</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">CMAKE_CXX_COMPILER</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/release/toolchains/gcc/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-g++</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> )</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ARM_LINUX_SYSROOT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /data/release/toolchains/gcc/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CACHE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;ARM cross compile system root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">include(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">CMAKE_CURRENT_LIST_DIR</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/arm.toolchain.cmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在 <code>opencv-x.x.x/platforms/linux</code> 目录下执行 <code>mkdir build &amp;&amp; cd build &amp;&amp; mkdir opencv_install</code>，执行 <code>cmake</code> 生成 <code>Makefile</code></p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_INSTALL_PREFIX=./opencv_install/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DCMAKE_TOOLCHAIN_FILE=../aarch64-gnu.toolchain.cmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      -DOPENCV_EXTRA_MODULES_PATH=/root/opencv/opencv_contrib-4.5.3/modules</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DBUILD_opencv_videoio=OFF</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -DBUILD_opencv_highgui=OFF</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  ../../..</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>执行 <code>make -j $(nproc --all)</code> 进行编译，执行 <code>make install</code> 安装编译后文件到 <code>opencv_install</code> 目录，拷贝 <code>lib</code> 和 <code>include</code> 目录内文件到盒子相关目录</p><h2 id="_3-再次使用golang编译" tabindex="-1">3. 再次使用Golang编译 <a class="header-anchor" href="#_3-再次使用golang编译" aria-label="Permalink to &quot;3. 再次使用Golang编译&quot;">​</a></h2><ol><li>删除和gui相关的文件</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $GOPATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/pkg/mod/gocv.io/x/gocv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v0.30.0/</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -rf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> highgui</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> videoio</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> photo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">*</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ol start="2"><li>改变 <code>opencv4.pc</code> 的路径，不指定时默认找的是 <code>/usr/local/lib/pkgconfig/opencv4.pc</code>，由于上面切到了 <code>/system/lib/pkgconfig</code> 里，这里再切回来</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> export</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PKG_CONFIG_PATH=&quot;/usr/local/lib/pkgconfig&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ol start="3"><li>修改 <code>opencv4.pc</code> 的内容，其中第 11 行后面指定的是需要依赖的so库，内容如下：</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Package Information for pkg-config</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/usr/local</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">exec_prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${prefix}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">libdir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${exec_prefix}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/lib</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">includedir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\${prefix}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/include/opencv4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Name:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OpenCV</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Description:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Computer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Vision</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Library</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Version:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4.5.3</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Libs:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">exec_prefix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}/lib</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_core</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_imgcodecs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_objdetect</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_features2d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_video</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_dnn</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_imgproc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_xfeatures2d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lopencv_calib3d</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Libs.private:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -ldl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lpthread</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -lrt</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cflags:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">includedir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><ol start="4"><li>再次 <code>go build</code> 发现成功编译</li></ol><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Hello,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> World!</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_4-总结" tabindex="-1">4. 总结 <a class="header-anchor" href="#_4-总结" aria-label="Permalink to &quot;4. 总结&quot;">​</a></h2><ol><li>如果没有按照 <code>gocv</code> 指定的 <code>opencv</code> 编译方式去编译，那需要自己指定 <code>opencv4.pc</code> 的位置</li><li>如果编译过程中报了某些依赖库( .so 库)的错，要么去想办法解决掉那些库，编译过程中实在用不到的，要在 <code>gocv</code> 源码中删掉对应的文件</li><li><code>gocv</code> 当前对 <code>opencv</code> 的实现有些许不全， 但是两边得对上， <code>gocv</code> 里面 <code>cpp</code> 有的 <code>opencvlib</code> 也得有，<code>opencvlib</code> 没有的 删了 <code>gocv</code> 里面的相关 <code>cpp文件</code> 就行了</li></ol>`,37);function u(s,B,v,m,_,f){const p=h,e=o("ClientOnly");return l(),k("div",null,[E,r(e,null,{default:d(()=>{var i,a;return[(((i=s.$frontmatter)==null?void 0:i.aside)??!0)&&(((a=s.$frontmatter)==null?void 0:a.showArticleMetadata)??!0)?(l(),g(p,{key:0,article:s.$frontmatter},null,8,["article"])):C("",!0)]}),_:1}),b])}const q=t(y,[["render",u]]);export{I as __pageData,q as default};
